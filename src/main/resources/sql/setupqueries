create table project
(
	id int auto_increment
		primary key,
	name varchar(255) null,
	description text null
)
;

create table task
(
	id int auto_increment
		primary key,
	proj_id int null,
	name varchar(255) null,
	description text null,
	pctComplete varchar(3) null,
	constraint task_ibfk_1
		foreign key (proj_id) references project (id)
			on delete cascade
)
;

create index proj_id
	on task (proj_id)
;

create table users
(
	id int auto_increment
		primary key,
	username varchar(255) null,
	email varchar(255) not null,
	pass_hash bigint null,
	priv_lvl int null,
	constraint username
		unique (username)
)
;

create table user_proj_assigned
(
	user_id int not null,
	proj_id int not null,
	primary key (user_id, proj_id),
	constraint user_proj_assigned_ibfk_1
		foreign key (user_id) references users (id)
			on delete cascade,
	constraint user_proj_assigned_ibfk_2
		foreign key (proj_id) references project (id)
			on delete cascade
)
;

create index proj_id
	on user_proj_assigned (proj_id)
;

create table user_task_assigned
(
	user_id int not null,
	task_id int not null,
	primary key (user_id, task_id),
	constraint user_task_assigned_ibfk_1
		foreign key (user_id) references users (id)
			on delete cascade,
	constraint user_task_assigned_ibfk_2
		foreign key (task_id) references task (id)
			on delete cascade
)
;

create index task_id
	on user_task_assigned (task_id)
;

delimiter //
create procedure GetUsersAttachedToProject (IN ProjID int)
begin
select * from users u, user_proj_assigned upa
where u.id = upa.user_id and upa.proj_id = ProjID;
end //


delimiter //
create procedure GetUsersAttachedToTask (IN TaskID int)
begin
select * from users u, user_task_assigned uta
where u.id = uta.user_id and uta.task_id = TaskID;
end //


